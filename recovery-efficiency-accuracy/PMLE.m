
function H = PMLE(A, n, K)

%%%% Algorithm 3 of "Achieving Optimal Misclassification Proportion in SBM" (Gao et al, 2017) %%%% 
    
    H = spectral_init(A, n, K); % initial label vector generated by spectral clustering
    size_C = sum(H~=0,1);
    
    %% compute the edges between Ck and Cl
    B = zeros(K);
    for k = 1:K
        for l = 1:K
            num_edge = H(:,k)'*A*H(:,l);
            if l == k
                B(k,l) = 2*num_edge/(size_C(k)*(size_C(k)-1));
            else
                B(k,l) = num_edge/(size_C(k)*size_C(l));
            end
        end
    end
    B(B>0.99) = 0.99;
    
    a = n*min(diag(B)); b = n*max(max(B - diag(diag(B))));
    t = 1/2*( log(a*(1-b/n)) - log(b*(1-a/n)) );
    rho = -1/(2*t)*( log(a*exp(-t)+n-a)-log(b*exp(t)+n-b) );
    
    sum_l = zeros(K,1);
    for u = 1:n
       for l = 1:K
          inx_l = find(H(:,l));
          sum_l(l) = sum(A(u,inx_l)) - rho*size(inx_l,1); 
       end
       [~,inx] = max(sum_l);
       H(u,inx) = 1; 
    end
    
end